name: CI/CD on FE

on:
 push:
  branches: [master]
 pull_request:
  branches: []

jobs:
 docker-build:
  name: Docker Build and Push
  runs-on: ubuntu-latest
  steps:
   - name: checkout
     uses: actions/checkout@v3
   - name: build docker image
     run: |
      docker build -t generat-election-fe:${{ github.sha }} Generat-Election-FE

 test-docker-image:
  name: Test Docker Image
  runs-on: ubuntu-latest
  needs: docker-build
  steps:
    - name: run tests
      run: docker run generat-election-fe:${{ github.sha }} npm test

 deploy-docker-image:
  name: Deploy Docker Image
  runs-on: ubuntu-latest
  needs: test-docker-image
  steps:
    - name: login to docker hub
      run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name: push Docker image
      run: |
       docker tag generat-election-fe:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/generat-election-fe:${{ github.sha }}
       docker push ${{ secrets.DOCKER_HUB_USERNAME }}/generat-election-fe:${{ github.sha }}


 aws:
  name: Build && Deploy to aws-ecr
  runs-on: ubuntu-latest
  needs: test-docker-image
  steps:
   - name: Configure AWS credentials
     uses: aws-actions/configure-aws-credentials@v3
     with:
      role-to-assume: arn:aws:iam::${{ secrets.ACCESS_KEY_ID}}:role/generat-election-fe
      aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
      aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      aws-region: ${{secrets.AWS_REGION}}

   - name: Login to AWS ECR
     id: login-ecr
     uses: aws-actions/amazon-ecr-login@v2

   - name: Build, tag, and push image to ECR
     env:
      ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      ECR_REPOSITORY: general-election-fe
      IMAGE_TAG: ${{ github.sha }}
     run: |
      docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG general-election-fe
      docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG      